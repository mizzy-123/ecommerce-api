// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              BigInt   @id @default(autoincrement())
  username        String
  email           String   @unique
  password        String
  phone_number    String
  profile_picture String   @db.VarChar(255)
  role_id         BigInt
  role            Role     @relation(fields: [role_id], references: [id], onDelete: Restrict)
  orders          Order[]
  reviews         Review[]
  addresses       Address?
  cart            Cart?
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  @@map("user")
}

model Role {
  id          BigInt @id @default(autoincrement())
  name        String
  description String @db.VarChar(255)
  users       User[]

  @@map("role")
}

model Product {
  id          BigInt      @id @default(autoincrement())
  name        String
  description String      @db.VarChar(255)
  price       Float
  stock       Int
  category_id BigInt
  category    Category    @relation(fields: [category_id], references: [id], onDelete: Restrict)
  image       String
  order_items OrderItem[]
  reviews     Review[]
  cart_items  CartItem[]
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt

  @@map("product")
}

model Category {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String    @db.VarChar(255)
  products    Product[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@map("category")
}

model Order {
  id           BigInt      @id @default(autoincrement())
  user_id      BigInt
  user         User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  order_code   String      @unique
  total_amount Float
  status       String
  order_items  OrderItem[]
  payment      Payment?
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt

  @@map("order")
}

model OrderItem {
  id         BigInt   @id @default(autoincrement())
  order_id   BigInt
  order      Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  product_id BigInt
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  quantity   Int
  price      Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("order_item")
}

model Payment {
  id                 BigInt         @id @default(autoincrement())
  order_id           BigInt         @unique
  order              Order          @relation(fields: [order_id], references: [id], onDelete: Cascade)
  payment_gateway_id BigInt
  payment_gateway    PaymentGateway @relation(fields: [payment_gateway_id], references: [id], onDelete: Cascade)
  amount             Float
  status             String
  transaction_id     String
  created_at         DateTime       @default(now())
  updated_at         DateTime       @updatedAt

  @@map("payment")
}

model PaymentGateway {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String
  payments    Payment[]
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@map("payment_gateway")
}

model Address {
  id          BigInt   @id @default(autoincrement())
  user_id     BigInt   @unique
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  street      String
  city        String
  state       String
  postal_code String
  country     String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("address")
}

model Review {
  id         BigInt   @id @default(autoincrement())
  product_id BigInt
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user_id    BigInt
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  rating     Int
  comment    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("review")
}

model Cart {
  id         BigInt     @id @default(autoincrement())
  user_id    BigInt     @unique
  user       User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  cart_items CartItem[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt

  @@map("cart")
}

model CartItem {
  id         BigInt   @id @default(autoincrement())
  cart_id    BigInt
  cart       Cart     @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  product_id BigInt
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("cart_item")
}
